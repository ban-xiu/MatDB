worker_processes 1;  # 设置工作进程的数量为 1

error_log /var/log/nginx/error.log warn;  # 定义错误日志的路径和级别为 warn


events {
    use epoll;  # 设置工作模式 
    worker_connections 1024;  # 限制并发连接数
}

http {

    # 自定义日志输出格式
    log_format custom_log '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$sent_http_x_health_check"';

    access_log /var/log/nginx/access.log custom_log;  # 定义访问日志的路径和格式为 combined

    include /etc/nginx/mime.types;
    default_type application/octet-stream;  # 保证 css 正常加载

    server {
        listen 80;  # 监听端口为 80
        server_name  localhost;  # 监听本机域名
        charset utf-8;  # 设置编码格式

        location / {
            root /usr/share/nginx/html ;  # 配置访问静态资源的根路径
            index login.html;  # 指定默认的索引文件
        }
        
        # 定义路由接口
        location /login {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /login.html;
        }

        location /register {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /register.html;
        }

        location /admin {

            # 没有对应参数则直接返回错误
            if ($request_uri !~ "^\/.+\?username=.+&key=.{30}$") {
                return 400;
            }

            root /usr/share/nginx/html;
            try_files $uri $uri/ /admin.html;
        }

        location /index {

            # 没有对应参数则直接返回错误
            if ($request_uri !~ "^\/.+\?uid=.+&username=.+$") {
                return 400;
            }

            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # 健康检查
        location /health {
            add_header X-Health-Check "health checking";
            rewrite ^ http://$host:$server_port/error redirect;
        }

        # 不可以直接访问静态文件
        location ~ ^/usr/share/nginx/html/ {
            return 403;  
        }

        # 定义错误返回页
        error_page 400 403 404 /error;
        error_page 500 502 503 504 /error;
        location = /error {
            root /usr/share/nginx/html;
            try_files $uri /error.html; 
        }

    }
}